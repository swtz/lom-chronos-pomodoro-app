Fonte: Udemy.com

Curso:
Atualização do Curso de React.Js e Next.js by Luiz Otávio Miranda

Seção 2:
Projeto prático com React, Vite, TypeScript, React Router, Hooks e Web Worker

Aula: 77. React Router - Criando um router e o componente ScrollToTop

Essa aula mostrou uma técnica bem importante.
Ela é útil para casos em que se deseja usar um hook de FORA DE UM CONTEXTO.

Ora, se algum hook é usado fora de um Contexto, o valor retornado por ele é
apenas o 'initialValue' do método 'createContexto'. Entretanto, a maioria
dos Contextos são usado com um 'Provider'. Logo, para obter o valor "correto"
do contexto é necessário que o componente esteja dentro do Contexto para usufruir
o valor passado na propriedade 'value'.

Como resolver esse problema?
Vamos usar como exemplo os componentes da 'lib' React Router.

function ScrollToTop() {
  const { pathname } = useLocation();

  useEffect(() => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  }, [pathname]);

  return null;
}

export function MainRouter() {
  // o uso do hook 'useLocation' aqui, obteria o 'initialValue' de 'createContext',
  // ou seja, não seria possível obter o valor dinâmico da variável 'pathname'.

  return (
    <BrowserRouter>
      <Routes>
        <Route path='/' element={<Home />} />
        <Route path='/about-pomodoro' element={<AboutPomodoro />} />
        <Route path='*' element={<NotFound />} />
      </Routes>
      <ScrollToTop />
    </BrowserRouter>
  );
}

Assim, o componente 'ScrollToTop' tem acesso ao valor dinâmico do Contexto 'BrowserRouter'.
A variável 'pathname' pode ser usada no hook 'useEffect' para que, na mudança de rota, seja
possível usar um método JavaScript para rolar a tela pro topo da página.
