Fonte: Udemy.com

Curso:
Atualização do Curso de React.Js e Next.js by Luiz Otávio Miranda

Seção 2:
Projeto prático com React, Vite, TypeScript, React Router, Hooks e Web Worker

Aula: 61. Interrompendo a task + solucionando bug estranho

Código que contém os dois botões:

<div className={styles.formRow}>
  {!state.activeTask ? (
    <DefaultButton
      type='submit'
      icon={<PlayCircleIcon />}
      aria-label='Inciar nova tarefa'
      title='Inciar nova tarefa'
    />
  ) : (
    <DefaultButton
      type='button'
      icon={<StopCircleIcon />}
      color='red'
      aria-label='Interromper tarefa atual'
      title='Interromper tarefa atual'
      onClick={handleInterruptTask}
    />
  )}
</div>

Basicamente, o botão do que possui o 'type="submit"' está enviando
o formulário sendo que ele não deveria ter esse comportamento.
Isso pode acontecer por alguns motivos. Na aula, o coach-Luiz testou
passar uma propriedade 'key' para ambos os botões (com valores distintos, é claro).
Isso resolveu o problema.
Ele comentou que, às vezes, o React tenta reaproveitar o mesmo elemento, pois, de
fato, eles são o mesmo. Entretanto isso pode causar alguns bugs como esse. Nesse caso,
o React acabou "se confundindo" achando que os dois botões são do 'type="submit"'.
Isso é importante, pois o desenvolvedor codificou corretamente a solução do problema;
entretanto isso gerou um bug por conta da maneira que o React renderiza o componente
"por debaixo dos panos".

Caso aconteça esse tipo de bug (possíveis soluções):

1 — uso da propriedade 'key' em ambos os componentes;
2 — evitar o uso do operador ternário — usar a sintaxe { boolean && <MyComponent /> };
3 — uso da função 'preventDefault' no método que lida com o evento do 'click'. (A função
evita que o formulário seja reenviado e executa o código da função normalmente)

A solução que o coach-Luiz prefere é a do uso da 'key' prop, pois ela instrui o React
a destruir o outro botão pelo fato dos dois botões serem diferentes. Nesse caso, ele
não tentará reutilizar o componente.
